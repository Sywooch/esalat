<?php

namespace app\modules\basket\controllers;

use app\assets\BasketAsset;
use app\modules\actions\models\ActionsPresentSave;
use app\modules\basket\models\BasketLg;
use app\modules\common\controllers\FrontController;
use app\modules\common\models\User;
use Yii;
use app\modules\catalog\models\GoodsTypes;

use yii\filters\VerbFilter;

/**
 * BasketController implements the CRUD actions for Basket model.
 */
class DefaultController extends FrontController
{
    const  TYPE_GOOD = [1010];

    public $layout = '@app/views/layouts/main';

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        if(!empty(Yii::$app->params['en'])) {
            if ($this->layout == '@app/views/layouts/main_en' || $this->layout == 'main_en') {
                BasketAsset::register($this->view);
            } else {
                $this->view->registerCssFile('/css/basket.css');
            }
        }else {
            if ($this->layout == '@app/views/layouts/main' || $this->layout == 'main') {
                BasketAsset::register($this->view);
            } else {
                $this->view->registerCssFile('/css/basket.css');
            }
        }

    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    public function actionIndex()
    {
        /* //udalenie produktov iz korziny personals EF
        //$user = User::find()->where(['id'=>Yii::$app->user->id])->one();
        //if((!empty($user->staff)) && ($user->staff==1)){
            $fountGoodsFlag = false;
            foreach ($this->basket['products'] as $product){
                if(in_array($product->variant->product->type_id, self::TYPE_GOOD)) {
                    Yii::$app->basket->removeProductCurrentBasket($product['id']);
                    $fountGoodsFlag = true;
                }
            }
            if($fountGoodsFlag){
                return $this->redirect('/basket/');
            }
        }*/
        $fountGoodsFlag= false;
        foreach ($this->basket['products'] as $product){
            if(in_array($product->variant->id, [1000075159, 1000075177])) {
                Yii::$app->basket->removeProductCurrentBasket($product['id']);
                $fountGoodsFlag = true;
            }
        }
        if($fountGoodsFlag){
            return $this->redirect('/basket/');
        }

        return $this->render('index', [

            'typeProducts' => GoodsTypes::find()->select(['id','name'])->where(['status' => 1])->indexBy('id')->all(),
        ]);
    }
    //
    public function actionModal()
    {
        return $this->renderPartial('modal', [
            'model' => '+',
        ]);
    }
    //
    public function actionStockModal()
    {
        return $this->renderPartial('stock-modal');
    }
}
