<?php

namespace app\controllers;

use app\modules\basket\models\BasketLg;
use app\modules\common\controllers\FrontController;
use Yii;
use app\modules\catalog\models\GoodsTypes;

use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * BasketController implements the CRUD actions for Basket model.
 */
class BasketControllerOld extends FrontController
{
    public function init()
    {
        if(!empty(Yii::$app->session['basket']['id'])){
            unset($_SESSION['basket']['id']);
        }
//        Yii::$app->basket->forcedStart();
        return parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    public function actionIndex()
    {
        $this->view->registerCssFile('/css/basket.css');

        return $this->render('index', [
            'typeProducts' => GoodsTypes::find()->select(['id','name'])->where(['status' => 1])->indexBy('id')->all(),
        ]);
    }

    /**
     * Lists all Basket models.
     * @return mixed
     */
//    public function actionIndexAdmin()
//    {
//        $searchModel = new BasketSearch();
//        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);
//
//        return $this->render('index', [
//            'searchModel' => $searchModel,
//            'dataProvider' => $dataProvider,
//        ]);
//    }

    /**
     * Finds the Basket model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Basket the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Basket::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
